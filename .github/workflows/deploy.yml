name: Deploy to Hetzner

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  FLUTTER_VERSION: '3.19.0'
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test Flutter App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Check code formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze code
        run: flutter analyze

  build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
            MILVUS_HOST=${{ secrets.MILVUS_HOST }}
            MILVUS_PORT=${{ secrets.MILVUS_PORT }}
            OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
            APP_ENV=${{ github.event.inputs.environment || 'production' }}

  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: staging
      url: https://staging.legal-rag-mexico.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Hetzner Staging
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: root
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /opt/legal-rag-mexico
            docker compose pull
            docker compose down
            docker compose up -d
            docker system prune -af

      - name: Health Check
        run: |
          sleep 30
          curl -f https://staging.legal-rag-mexico.com/health || exit 1

  deploy-production:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment:
      name: production
      url: https://legal-rag-mexico.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Hetzner Production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: root
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            # Backup current version
            docker tag legal-rag-mexico:latest legal-rag-mexico:backup
            
            # Pull new image
            docker pull ${{ needs.build.outputs.image-tag }}
            docker tag ${{ needs.build.outputs.image-tag }} legal-rag-mexico:latest
            
            # Deploy with zero downtime
            cd /opt/legal-rag-mexico
            docker compose up -d --no-deps --build legal-rag-web
            
            # Wait for health check
            sleep 30
            if ! curl -f http://localhost/health; then
              echo "Health check failed, rolling back..."
              docker tag legal-rag-mexico:backup legal-rag-mexico:latest
              docker compose up -d --no-deps legal-rag-web
              exit 1
            fi
            
            # Clean up
            docker system prune -af

      - name: Notify Deployment
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment to Production: ${{ job.status }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  security-scan:
    name: Security Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build.outputs.image-tag }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  performance-test:
    name: Performance Test
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://staging.legal-rag-mexico.com
            https://staging.legal-rag-mexico.com/login
          uploadArtifacts: true
          temporaryPublicStorage: true